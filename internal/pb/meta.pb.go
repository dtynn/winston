// Code generated by protoc-gen-go. DO NOT EDIT.
// source: meta.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Node struct {
	Id      uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Context []byte `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Node) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Node) GetContext() []byte {
	if m != nil {
		return m.Context
	}
	return nil
}

type MetaAddMetaNodeReq struct {
	Nodes []*Node `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
}

func (m *MetaAddMetaNodeReq) Reset()                    { *m = MetaAddMetaNodeReq{} }
func (m *MetaAddMetaNodeReq) String() string            { return proto.CompactTextString(m) }
func (*MetaAddMetaNodeReq) ProtoMessage()               {}
func (*MetaAddMetaNodeReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *MetaAddMetaNodeReq) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type MetaAddMetaNodeResp struct {
	Results []*Result `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *MetaAddMetaNodeResp) Reset()                    { *m = MetaAddMetaNodeResp{} }
func (m *MetaAddMetaNodeResp) String() string            { return proto.CompactTextString(m) }
func (*MetaAddMetaNodeResp) ProtoMessage()               {}
func (*MetaAddMetaNodeResp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *MetaAddMetaNodeResp) GetResults() []*Result {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*Node)(nil), "pb.Node")
	proto.RegisterType((*MetaAddMetaNodeReq)(nil), "pb.MetaAddMetaNodeReq")
	proto.RegisterType((*MetaAddMetaNodeResp)(nil), "pb.MetaAddMetaNodeResp")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Meta service

type MetaClient interface {
	AddMetaNode(ctx context.Context, in *MetaAddMetaNodeReq, opts ...grpc.CallOption) (*MetaAddMetaNodeResp, error)
}

type metaClient struct {
	cc *grpc.ClientConn
}

func NewMetaClient(cc *grpc.ClientConn) MetaClient {
	return &metaClient{cc}
}

func (c *metaClient) AddMetaNode(ctx context.Context, in *MetaAddMetaNodeReq, opts ...grpc.CallOption) (*MetaAddMetaNodeResp, error) {
	out := new(MetaAddMetaNodeResp)
	err := grpc.Invoke(ctx, "/pb.Meta/AddMetaNode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Meta service

type MetaServer interface {
	AddMetaNode(context.Context, *MetaAddMetaNodeReq) (*MetaAddMetaNodeResp, error)
}

func RegisterMetaServer(s *grpc.Server, srv MetaServer) {
	s.RegisterService(&_Meta_serviceDesc, srv)
}

func _Meta_AddMetaNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetaAddMetaNodeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetaServer).AddMetaNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Meta/AddMetaNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetaServer).AddMetaNode(ctx, req.(*MetaAddMetaNodeReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Meta_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Meta",
	HandlerType: (*MetaServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddMetaNode",
			Handler:    _Meta_AddMetaNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "meta.proto",
}

func init() { proto.RegisterFile("meta.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0xc1, 0x0a, 0x82, 0x40,
	0x10, 0x86, 0xd9, 0xcd, 0x32, 0x46, 0xe9, 0x30, 0x41, 0x2d, 0x1e, 0x42, 0xa4, 0x83, 0x27, 0x09,
	0xeb, 0x16, 0x04, 0x5d, 0xba, 0xd5, 0x61, 0xdf, 0x40, 0xdd, 0x3d, 0x08, 0xe9, 0x6e, 0xee, 0x06,
	0x3d, 0x7e, 0xac, 0x22, 0x04, 0x76, 0x1a, 0xe6, 0xfb, 0xe7, 0x1b, 0x66, 0x00, 0x1a, 0x69, 0x8b,
	0x4c, 0x77, 0xca, 0x2a, 0xa4, 0xba, 0x8c, 0xc2, 0x4a, 0x35, 0x8d, 0x6a, 0x07, 0x92, 0x1c, 0xc0,
	0x7b, 0x28, 0x21, 0x71, 0x05, 0xb4, 0x16, 0x8c, 0xc4, 0x24, 0xf5, 0x38, 0xad, 0x05, 0x32, 0xf0,
	0x2b, 0xd5, 0x5a, 0xf9, 0xb1, 0x8c, 0xc6, 0x24, 0x0d, 0xf9, 0xd8, 0x26, 0x27, 0xc0, 0xbb, 0xb4,
	0xc5, 0x55, 0x08, 0x57, 0x9c, 0xcc, 0xe5, 0x0b, 0x77, 0x30, 0x6f, 0x95, 0x90, 0x86, 0x91, 0x78,
	0x96, 0x06, 0xf9, 0x32, 0xd3, 0x65, 0xd6, 0x67, 0x03, 0x4e, 0xce, 0xb0, 0x9e, 0x58, 0x46, 0xe3,
	0x1e, 0xfc, 0x4e, 0x9a, 0xf7, 0xd3, 0x8e, 0x22, 0x38, 0x91, 0xf7, 0x88, 0x8f, 0x51, 0x7e, 0x03,
	0xcf, 0x59, 0x78, 0x81, 0xe0, 0x67, 0x01, 0x6e, 0xdc, 0xec, 0xf4, 0x96, 0x68, 0xfb, 0x97, 0x1b,
	0x5d, 0x2e, 0xfa, 0x9f, 0x8f, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbc, 0xc4, 0xf4, 0xc6, 0x13,
	0x01, 0x00, 0x00,
}
